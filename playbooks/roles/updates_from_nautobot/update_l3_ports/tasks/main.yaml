---
- name: Convert VLANs and prepare clean vars
  set_fact:
    untagged_vlan_id: "{{ untagged_vlan | default('') }}"
    vlan_list: "{{ tagged_vlans | default([]) | map('int') | list }}"
    l3_cidr: "{{ l3_addr | default('') }}"
    interface_id: "{{ interface_id }}"
    device_id: "{{ device_id }}"

- name: Derive address and mask from CIDR
  set_fact:
    l3_address: "{{ (l3_cidr.split('/')[0]) if '/' in l3_cidr else l3_cidr }}"
    l3_mask: "{{ (l3_cidr.split('/')[1]) if '/' in l3_cidr else '255.255.255.255' }}"
  when: l3_cidr != ''

- name: Build list of VLANs to ensure exist
  set_fact:
    all_vlans_to_create: >-
      {{
        ([untagged_vlan_id] if untagged_vlan_id != '' else [])
        + (vlan_list | map('int') | list)
      }}

- name: Debug VLAN list to be created
  debug:
    var: all_vlans_to_create

# 1️⃣ Créer automatiquement tous les VLANs nécessaires
- name: Ensure all VLANs exist (untagged + tagged)
  ale.aos8.aos8_vlans:
    config:
      - vlan_id: "{{ item }}"
        name: "VLAN_{{ item }}"
    state: merged
  loop: "{{ all_vlans_to_create }}"
  when: all_vlans_to_create | length > 0

# 2️⃣ Configuration L3 (IP/mask sur interface VLAN)
- name: Build L3 interface config dynamically
  set_fact:
    l3_config:
      - interface_id: "{{ interface_id }}"
        int_type: "vlan"
        l3_addr: "{{ l3_address }}"
        l3_mask: "{{ l3_mask }}"

- name: Configure L3 interface
  when: l3_address is defined and l3_address != ''
  ale.aos8.aos8_l3_interfaces:
    config: "{{ l3_config }}"
    state: merged

# 3️⃣ Construire la configuration L2 complète (untagged + tagged)
- name: Build complete L2 config list (untagged + tagged)
  set_fact:
    l2_config: >-
      {{
        (
          ([{
            'vlan_id': untagged_vlan_id,
            'port_type': 'port',
            'port_number': interface_id,
            'mode': 'untagged'
          }] if untagged_vlan_id is defined and untagged_vlan_id != '' else [])
          +
          (vlan_list | map('community.general.dict_kv', 'vlan_id', None)
                     | map('combine', {'port_type': 'port', 'port_number': interface_id, 'mode': 'tagged'})
                     | list)
        )
      }}

- name: Debug final L2 config to apply
  debug:
    var: l2_config

# 4️⃣ Appliquer la configuration L2 VLAN par VLAN
- name: Configure all L2 VLAN memberships
  ale.aos8.aos8_l2_interfaces:
    config: "{{ item }}"
    state: merged
  loop: "{{ l2_config }}"
  when: l2_config | length > 0

