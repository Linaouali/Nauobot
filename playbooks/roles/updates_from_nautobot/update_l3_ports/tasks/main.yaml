---
# tasks/main.yaml

# 1. Préparer les variables VLAN et IP
- name: Convert VLANs and prepare clean vars
  set_fact:
    vlan_list: "{{ tagged_vlans if tagged_vlans is iterable else [] }}"
    untagged_vlan_id: "{{ untagged_vlan if untagged_vlan | length > 0 else omit }}"

- name: Derive address and mask from CIDR
  set_fact:
    l3_addr: "{{ ip_address | ansible.utils.ipaddr('address') if ip_address else omit }}"
    l3_mask: "{{ ('0.0.0.0/' ~ (ip_address | ansible.utils.ipaddr('prefix'))) | ansible.utils.ipaddr('netmask') if ip_address else omit }}"

# 2. Construire la liste complète de VLANs à créer
- name: Build list of VLANs to ensure exist
  set_fact:
    all_vlans_to_create: >-
      {{
        ([untagged_vlan_id] if untagged_vlan_id is defined else [])
        + vlan_list
      }}

- name: Debug VLAN list to be created
  debug:
    var: all_vlans_to_create

# 3. Créer automatiquement tous les VLANs nécessaires (untagged + tagged)
- name: Ensure all VLANs exist (untagged + tagged)
  ale.aos8.aos8_vlans:
    config: "{{ all_vlans_to_create | map('community.general.dict_kv', 'vlan_id') 
                | map('combine', {'admin': 'enable'}) | list }}"
    state: merged
  when: all_vlans_to_create | length > 0

# 4. Configurer L3 interface si IP définie
- name: Build L3 interface config dynamically
  set_fact:
    l3_config:
      - name: "{{ 'intvlan' + untagged_vlan_id if int_type == 'vlan' else interface_id }}"
        address: "{{ l3_addr }}"
        mask: "{{ l3_mask }}"
        type: "{{ int_type }}"
        port_id: "{{ untagged_vlan_id if int_type == 'vlan' else interface_id }}"
  when: l3_addr is defined

- name: Debug generated L3 config
  debug:
    var: l3_config
  when: l3_addr is defined

- name: Configure L3 interface
  ale.aos8.aos8_l3_interfaces:
    config: "{{ l3_config }}"
    state: merged
  when: l3_addr is defined

# 5. Configurer les ports L2 (untagged + tagged)
- name: Build L2 interface config
  set_fact:
    l2_config:
      - port_number: "{{ interface_id }}"
        port_type: port
        mode: "{{ 'tagged' if vlan_list | length > 0 else 'untagged' }}"
        untagged_vlan: "{{ untagged_vlan_id if untagged_vlan_id is defined else omit }}"
        tagged_vlans: "{{ vlan_list if vlan_list | length > 0 else omit }}"
  when: l3_addr is not defined or (untagged_vlan_id is defined or vlan_list | length > 0)

- name: Debug generated L2 config
  debug:
    var: l2_config

- name: Configure L2 interface
  ale.aos8.aos8_l2_interfaces:
    config: "{{ l2_config }}"
    state: rendered
  when: l2_config is defined

